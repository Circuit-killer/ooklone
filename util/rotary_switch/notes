we have a rotary switch of n_switch positions. we measure
the switch position using an adc. we want switch positions
to result in an adc values that are as widely spaced as
possible from one another, esp. with low resolution adc.
lets do the maths.

if the adc has n_adc bits, or adc_hi = pow2(n_adc) and
the switch has n_switch positions, we have an adc_step
value of:
adc_step = adc_hi / n_switch

if v_ref is the adc reference voltage and v_i is
the value in volts measured by the adc at switch
position i, we have the following relation:
v_i = v_ref / adc_hi * (adc_step * i) (eq_0)

also, we have from the resistor divider network eq:
v_out = v_ref * rdiv_2 / (rdiv_1 + rdiv_2)
in our case, rdiv_1 is the resistor value we want to
compute for every switch position. Lets call it r_i,
we have:
v_i = v_ref * rdiv_2 / (r_i + rdiv_2) (eq_1)

by equating eq_0 and eq_1:
v_ref / adc_hi * (adc_step * i) = v_ref * rdiv_2 / (r_i + rdiv_2)
(adc_step * i) / adc_hi = rdiv_2 / (r_i + rdiv_2)
(adc_step * i) / (adc_hi * rdiv_2) = 1 / (r_i + rdiv_2)

r_i = (adc_hi * rdiv_2) / (adc_step * i) - rdiv_2 (eq_2)

from eq_2:
i = (rdiv_2 * n_switch) / (r_i + r2)

in our case, we arbitrarly choose rdiv_2 = 1000 ohms. Note
that you can play on this value to scale the other resistors.
It is useful if like me you are peeking resistors from a set
already available.

Also, r_0 cannot be computed (division by zero). We should
chose it so that it is big enough, le say 100 * r_2. in our
case, with a switch of 7 position and a voltage reference
of 3.3V, we have the following values:

i = 00, r =  120000.0, adc = 0x00000008, v =  0.0 (120000)
i = 01, r =    6000.0, adc = 0x00000092, v =  0.5 (6800)
i = 02, r =    2500.0, adc = 0x00000124, v =  0.9 (2400)
i = 03, r =    1333.3, adc = 0x000001b6, v =  1.4 (1200)
i = 04, r =     750.0, adc = 0x00000249, v =  1.9 (690)
i = 05, r =     400.0, adc = 0x000002db, v =  2.4 (390)
i = 06, r =     166.7, adc = 0x0000036d, v =  2.8 (150)
